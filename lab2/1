-- Создание таблиц
CREATE TABLE categories (
    category_id INTEGER PRIMARY KEY,
    category_name TEXT
);

CREATE TABLE products (
    product_id INTEGER PRIMARY KEY,
    product_name TEXT,
    category_id INTEGER,
    description TEXT,
    FOREIGN KEY (category_id) REFERENCES categories(category_id)
);

CREATE TABLE customers (
    customer_id INTEGER PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    phone TEXT,
    address TEXT
);

CREATE TABLE orders (
    order_id INTEGER PRIMARY KEY,
    customer_id INTEGER,
    order_date DATE,
    total_amount NUMERIC,
    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)
);

CREATE TABLE order_items (
    order_item_id INTEGER PRIMARY KEY,
    order_id INTEGER,
    product_id INTEGER,
    quantity INTEGER,
    unit_price NUMERIC,
    FOREIGN KEY (order_id) REFERENCES orders(order_id),
    FOREIGN KEY (product_id) REFERENCES products(product_id)
);

-- Вставка данных в таблицы
INSERT INTO customers (customer_id, customer_name, email, phone, address) VALUES
(1, 'Alice Johnson', 'alice.johnson@example.com', '1234567890', '123 Main St'),
(2, 'Bob Smith', 'bob.smith@example.com', '0987654321', '456 Elm St'),
(3, 'Charlie Brown', 'charlie.brown@example.com', '1112223333', '789 Oak St'),
(4, 'David Black', 'david.black@example.com', '4445556666', '321 Pine St'),
(5, 'Eva White', 'eva.white@example.com', '7778889999', '654 Cedar St'),
(6, 'Frank Green', 'frank.green@example.com', '3334445555', '987 Maple St'),
(7, 'Grace Blue', 'grace.blue@example.com', '6667778888', '159 Birch St'),
(8, 'Hank Orange', 'hank.orange@example.com', '5556667777', '753 Spruce St'),
(9, 'Ivy Purple', 'ivy.purple@example.com', '2223334444', '951 Fir St'),
(10, 'Jack Yellow', 'jack.yellow@example.com', '8889990000', '159 Palm St');

INSERT INTO categories (category_id, category_name) VALUES
(1, 'Electronics'),
(2, 'Books'),
(3, 'Clothing'),
(4, 'Toys'),
(5, 'Furniture');

INSERT INTO products (product_id, product_name, category_id, description) VALUES
(1, 'Smartphone', 1, 'High-end smartphone with 128GB storage'),
(2, 'Laptop', 1, 'Powerful laptop with 16GB RAM'),
(3, 'Tablet', 1, '10-inch tablet with stylus'),
(4, 'Novel', 2, 'Best-selling mystery novel'),
(5, 'Textbook', 2, 'Introduction to Computer Science textbook'),
(6, 'T-shirt', 3, 'Cotton T-shirt with logo'),
(7, 'Jeans', 3, 'Blue denim jeans'),
(8, 'Action Figure', 4, 'Superhero action figure'),
(9, 'Board Game', 4, 'Strategy board game for 2-4 players'),
(10, 'Sofa', 5, 'Comfortable 3-seater sofa');

INSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES
(1, 1, '2024-10-01', 150.00),
(2, 2, '2024-10-02', 200.00),
(3, 3, '2024-10-03', 75.00),
(4, 4, '2024-10-04', 300.00),
(5, 5, '2024-10-05', 180.00),
(6, 6, '2024-10-06', 220.00),
(7, 7, '2024-10-07', 125.00),
(8, 8, '2024-10-08', 350.00),
(9, 9, '2024-10-09', 400.00),
(10, 10, '2024-10-10', 500.00);

INSERT INTO order_items (order_item_id, order_id, product_id, quantity, unit_price) VALUES
(1, 1, 1, 2, 75.00),
(2, 2, 2, 1, 200.00),
(3, 3, 4, 1, 75.00),
(4, 4, 3, 2, 150.00),
(5, 5, 5, 1, 180.00),
(6, 6, 6, 2, 110.00),
(7, 7, 7, 1, 125.00),
(8, 8, 8, 3, 100.00),
(9, 9, 9, 4, 100.00),
(10, 10, 10, 1, 500.00);

-- CTE для сводки заказов
WITH order_summary AS (
    SELECT o.order_id, c.customer_name, o.order_date, o.total_amount, 
           SUM(oi.quantity) AS total_quantity
    FROM orders o
    JOIN customers c ON o.customer_id = c.customer_id
    JOIN order_items oi ON o.order_id = oi.order_id
    GROUP BY o.order_id, c.customer_name, o.order_date, o.total_amount
)
SELECT * FROM order_summary;

-- CTE для сводки продаж продуктов
WITH product_sales AS (
    SELECT p.product_id, p.product_name, cat.category_name AS category,
           SUM(oi.quantity * oi.unit_price) AS total_revenue
    FROM products p
    JOIN categories cat ON p.category_id = cat.category_id
    JOIN order_items oi ON p.product_id = oi.product_id
    GROUP BY p.product_id, p.product_name, cat.category_name
)
SELECT * FROM product_sales;

-- Клиент, сделавший больше всего заказов
SELECT c.customer_name, COUNT(o.order_id) AS total_orders
FROM customers c
JOIN orders o ON c.customer_id = o.customer_id
GROUP BY c.customer_name
ORDER BY total_orders DESC
LIMIT 1;

-- Продукт, заказанный в наибольшем количестве
SELECT p.product_name, SUM(oi.quantity) AS total_quantity
FROM products p
JOIN order_items oi ON p.product_id = oi.product_id
GROUP BY p.product_name
ORDER BY total_quantity DESC
LIMIT 1;

-- Продукт, который принес наибольший доход
SELECT p.product_name, SUM(oi.quantity * oi.unit_price) AS total_revenue
FROM products p
JOIN order_items oi ON p.product_id = oi.product_id
GROUP BY p.product_name
ORDER BY total_revenue DESC
LIMIT 1;

-- Общий доход от клиента, сделавшего больше всего заказов
WITH top_customer AS (
    SELECT c.customer_id
    FROM customers c
    JOIN orders o ON c.customer_id = o.customer_id
    GROUP BY c.customer_id
    ORDER BY COUNT(o.order_id) DESC
    LIMIT 1
)
SELECT SUM(o.total_amount) AS total_revenue
FROM orders o
WHERE o.customer_id = (SELECT customer_id FROM top_customer);
